version: "3"

networks:
  app-tier:
    driver: bridge

volumes:
  mongodb_data:
    driver: local

services:

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: microservice-matchmaking
    environment:
      - SPOTTER_AMQP_USERNAME=user
      - SPOTTER_AMQP_PASSWORD=password
      - SPOTTER_AMQP_HOST=rabbitmq
      - SPOTTER_AMQP_VHOST=vhost
    volumes:
      - ./matchmaking:/app/
      - ./Makefile:/app/Makefile
    depends_on:
      - microservice_auth
      - microservice_player_stats
      - microservice_strategist
      - microservice_game_servers_pool
    networks:
      - app-tier
    tty: true

  microservice_auth:
    image: openmatchmaking/microservice-auth:0.1.3
    ports:
      - 8000:8000
    environment:
      - APP_HOST=0.0.0.0
      - APP_SERVER=sanic
      - APP_CONFIG_PATH=./config.py
      - REDIS_HOST=redis
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=mongodb
      - MONGODB_DATABASE=microservices_db
      - WAIT_FOR_MONGODB=30
      - WAIT_FOR_REDIS=30
      - WAIT_FOR_RABBITMQ=30
    depends_on:
      - rabbitmq
      - mongodb
      - redis
    networks:
      - app-tier
    tty: true

  microservice_strategist:
    image: openmatchmaking/microservice-strategist:0.2.3
    environment:
      - APP_SERVER=simplerun
      - APP_CONFIG_PATH=./config.py
      - SERVICE_HOST=microservice_auth
      - SERVICE_PORT=8000
      - WAIT_FOR_RABBITMQ=30
      - WAIT_FOR_SERVICE=30
    depends_on:
      - rabbitmq
      - microservice_auth
    networks:
      - app-tier
    tty: true

  microservice_player_stats:
    image: openmatchmaking/microservice-player-statistics:0.1.0
    ports:
      - 8001:8000
    environment:
      - APP_SERVER=sanic
      - APP_CONFIG_PATH=./config.py
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=mongodb
      - MONGODB_DATABASE=microservices_db
      - SERVICE_HOST=microservice_auth
      - SERVICE_PORT=8000
      - WAIT_FOR_MONGODB=30
      - WAIT_FOR_RABBITMQ=30
      - WAIT_FOR_SERVICE=30
    depends_on:
      - rabbitmq
      - mongodb
      - microservice_auth
    networks:
      - app-tier
    tty: true

  microservice_game_servers_pool:
    image: openmatchmaking/microservice-game-servers-pool:0.1.2
    ports:
      - 8002:8000
    environment:
      - APP_HOST=0.0.0.0
      - APP_DEBUG=False
      - APP_SERVER=sanic
      - APP_CONFIG_PATH=./config.py
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_HOST=mongodb
      - MONGODB_DATABASE=microservices_db
      - SERVICE_HOST=microservice_auth
      - SERVICE_PORT=8000
      - WAIT_FOR_MONGODB=30
      - WAIT_FOR_RABBITMQ=30
      - WAIT_FOR_SERVICE=30
    depends_on:
      - mongodb
      - rabbitmq
      - microservice_auth
    networks:
      - app-tier
    tty: true

  rabbitmq:
    image: bitnami/rabbitmq:3.7
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=password
    networks:
      - app-tier
    tty: true

  mongodb:
    image: bitnami/mongodb:4
    ports:
      - 27017:27017
    environment:
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=microservices_db
      - MONGODB_ROOT_PASSWORD=root
    volumes:
      - mongodb_data:/bitnami
    networks:
      - app-tier
    tty: true

  redis:
    image: bitnami/redis:latest
    ports:
      - 6379:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_EXTRA_FLAGS=--maxmemory 100mb
    networks:
      - app-tier
    tty: true
